{{- if .Values.controller.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kuryr.fullname" . }}-controller
  namespace: kube-system
  labels:
    {{- include "kuryr.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
spec:
  {{- if not .Values.controller.autoscaling.enabled }}
  replicas: {{ .Values.controller.autoscaling.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kuryr.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: controller
  template:
    metadata:
      name: {{include "kuryr.fullname" .}}-controller
      labels:
        {{- include "kuryr.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kuryr.controller.serviceAccountName" . }}
      automountServiceAccountToken: true
      hostNetwork: true
      containers:
        - name: {{ .Chart.Name }}-controller
          image: {{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}
        {{- if .Values.controller.image.pullPolicy }}
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        {{- end }}
          terminationMessagePath: "/dev/termination-log"
        {{- if .Values.controller.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /alive
              port: 8082
              scheme: HTTP
            initialDelaySeconds: {{ .Values.controller.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.controller.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.controller.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.controller.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.controller.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.controller.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: {{ .Values.controller.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.controller.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.controller.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.controller.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.controller.readinessProbe.failureThreshold }}
        {{- end }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: "/etc/kuryr"
            - name: certificates-volume
              mountPath: "/etc/ssl/certs"
              readOnly: true
          {{- with .Values.controller.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "kuryr.configMapName" . }}-config
        - name: certificates-volume
          secret:
            secretName: {{ include "kuryr.fullname" . }}-certificates
      {{- with .Values.controller.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      nodeSelector:
        "kubernetes.io/os": linux
        {{- with .Values.controller.nodeSelector }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoSchedule"
      {{- with .Values.controller.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
{{- end }}
