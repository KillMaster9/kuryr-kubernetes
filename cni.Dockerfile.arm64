FROM golang:1.21@sha256:13a7dc7b46068caeaf811cc8af56d394a89c97d9b194550f8be5a4de05ca5f99 as builder
#FROM registry.cn-hangzhou.aliyuncs.com/testwydimage/docker.io.library.golang:1.21-alpine as builder

WORKDIR /go/src/opendev.com/kuryr-kubernetes
COPY . .

ENV ARCH=arm64
ENV OS=linux
ENV GOPROXY=https://goproxy.cn,direct

RUN export GOCACHE=/tmp && \
    export GO111MODULE=auto && \
    export GOARCH=${ARCH} && \
    export GOOS=${OS} && \
    go build -o /go/bin/kuryr-cni ./kuryr_cni/pkg/*

RUN cd ./coordinator && \
    export GOCACHE=/tmp && \
    export GO111MODULE=on && \
    export GOARCH=${ARCH} && \
    export GOOS=${OS} && \
    go mod tidy && \
    go build -o /go/bin/coordinator .

FROM quay.io/centos/centos:stream8@sha256:006cf9e1a950130a6ddf4c396871f555c80447ee7efb5996844789e038aad581
LABEL authors="Antoni Segura Puimedon<toni@kuryr.org>, Micha≈Ç Dulko<mdulko@redhat.com>"

ARG UPPER_CONSTRAINTS_FILE="https://releases.openstack.org/constraints/upper/xena"
ARG OSLO_LOCK_PATH=/var/kuryr-lock
ARG RDO_REPO=https://repos.fedorapeople.org/repos/openstack/archived/openstack-xena/rdo-release-xena-1.el8.noarch.rpm

RUN sed -i 's/^mirrorlist/#mirrorlist/g' /etc/yum.repos.d/* \
    &&  sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/*
# NOTE(gryf): There is a sed substitution to make package manager to
# cooperate. It might be a subject to change in the future, either when
# yum/dnf starts to respect yum.conf variables, or mirror location would
# change.
RUN dnf upgrade -y && dnf install -y epel-release $RDO_REPO \
    && sed -e 's/$releasever/8-stream/' -i /etc/yum.repos.d/messaging.repo \
    && sed -e 's/$basearch/x86_64/' -i /etc/yum.repos.d/messaging.repo \
    && sed -i 's/^mirrorlist/#mirrorlist/g' /etc/yum.repos.d/* \
    && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/* \
    && dnf install -y --setopt=tsflags=nodocs python3-pip openvswitch sudo iproute libstdc++ pciutils kmod-libs \
    && dnf install -y --setopt=tsflags=nodocs gcc gcc-c++ python3-devel git

COPY . /opt/kuryr-kubernetes

RUN chmod 777 /opt/kuryr-kubernetes/cni_ds_init

RUN pip3 --no-cache-dir install -U pip \
    && python3 -m pip --no-cache-dir install -c $UPPER_CONSTRAINTS_FILE /opt/kuryr-kubernetes \
    && cp /opt/kuryr-kubernetes/cni_ds_init /usr/bin/cni_ds_init \
    && mkdir -p /etc/kuryr-cni \
    && cp /opt/kuryr-kubernetes/etc/cni/net.d/* /etc/kuryr-cni \
    && dnf -y remove gcc gcc-c++ python3-devel git \
    && dnf clean all \
    && mkdir ${OSLO_LOCK_PATH}

RUN cd /opt/kuryr-kubernetes/keystone/keystoneauth \
    && python3 setup.py install \
    && cd  /opt/kuryr-kubernetes/keystone/keystonemiddleware \
    && python3 setup.py install \
    && rm -rf /opt/kuryr-kubernetes

RUN  mkdir -p cni-plugins/ && \
     #curl -SL --retry 5 https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-arm64-v1.1.1.tgz | tar -xz -C cni-plugins/
     tar -xzf /opt/kuryr-kubernetes/kuryr_patch/cni-plugins-linux-arm64-v1.1.1.tgz -C cni-plugins/

COPY --from=builder /go/bin/kuryr-cni /iveth-cni
COPY --from=builder /go/bin/coordinator /coordinator
COPY cni-plugins/portmap  /portmap
COPY cni-plugins/loopback  /loopback

ARG CNI_DAEMON=True
ENV CNI_DAEMON ${CNI_DAEMON}
ENV OSLO_LOCK_PATH=${OSLO_LOCK_PATH}

ENTRYPOINT [ "cni_ds_init" ]
